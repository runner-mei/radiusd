package v2

import (
	"bytes"
	"crypto/md5"
	"fmt"
	"testing"
)

func TestRawAuth(t *testing.T) {
	hash := md5.New()
	hash.Write([]byte{2, 1, 0, 0, 0x14, 0xe, 0, 0, 0x6a, 0x78, 0x2b, 0xab, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0})
	hash.Write([]byte("ctbri4008118114"))
	bts := hash.Sum(nil)
	for _, v := range bts {
		fmt.Printf(" %02x", v)
	}

}

func TestUnmarshal(t *testing.T) {
	bts := []byte{0x02, 0x03, 0x00, 0x00, 0x9e, 0xd8, 0x0a, 0xb7, 0x7c, 0x7f, 0x4e, 0xd8, 0x00, 0x00, 0x00, 0x02, 0x23, 0x5e, 0xed, 0x66, 0x3f, 0x9b, 0x18, 0x6e, 0xbc, 0x64, 0xde, 0x52, 0xfd, 0x54, 0x20, 0x81, 0x01, 0x15, 0x40, 0x77, 0x6c, 0x61, 0x6e, 0x2d, 0x78, 0x69, 0x6e, 0x6a, 0x69, 0x65, 0x6b, 0x6f, 0x75, 0x2d, 0x6e, 0x65, 0x77, 0x04, 0x12, 0x95, 0xac, 0xed, 0xcb, 0xb9, 0xa1, 0x25, 0x51, 0xc9, 0xed, 0x8d, 0x4c, 0xbc, 0x45, 0x3a, 0xf4}
	v := new(Version)
	m := v.Unmarshall(bts)
	fmt.Println(m)
	mq := m.(*T_Message)
	wanted := mq.Header.Authenticator
	mq.Header.Authenticator = []byte{0xde, 0x75, 0x9a, 0x17, 0x8d, 0xf4, 0xbe, 0x44, 0x36, 0x8e, 0xfc, 0xdb, 0x5a, 0xd0, 0x1a, 0xc7}
	fmt.Println(m)
	mq.AuthBy("mink2501")
	if bytes.Compare(mq.Header.Authenticator, wanted) != 0 {
		t.Error(fmt.Errorf("MD5鉴权错误"))
	}
}

func TestAuth(t *testing.T) {
	bts := []byte{0x02, 0x02, 0x00, 0x00, 0x53, 0x6c, 0x00, 0x31, 0xc0, 0xa8, 0x0a, 0x03, 0x00, 0x00, 0x00, 0x01, 0x03, 0x12, 0xc7, 0x1a, 0x83, 0x1b, 0xec, 0x63, 0x34, 0xf9, 0x55, 0xd4, 0x84, 0x23, 0xb6, 0x2a, 0x5e, 0x39}
	v := new(Version)
	m := v.Unmarshall(bts)
	fmt.Println(m)
	mq := m.(*T_Message)
	fmt.Println(mq.Attrs)
}
